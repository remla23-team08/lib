name: Tag and Release library
on:
  push:
    branches:
      - main # This is done so that merges to main are considered releases (Mainline Branching Strategy)
jobs:
  bump_tag_and_release:
    name: Bump Version, Tag and Release
    runs-on: ubuntu-latest
    steps: 
      - name: Generate GitHub App Token
        id: generate_github_app_token
        uses: tibdex/github-app-token@v1.9.0
        with:
          app_id: ${{ secrets.GH_APP_ID }}
          private_key: ${{ secrets.GH_APP_KEY }}

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ steps.generate_github_app_token.outputs.token }}
          persist-credentials: true
    
      - name: Install .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '3.1.x'
        env: 
          DOTNET_INSTALL_DIR: ${{ runner.workspace }}/dotnet

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.x'
        
      - name: Get GitVersion
        id: get_gitversion
        uses: gittools/actions/gitversion/execute@v0
        with:
          useConfigFile: true
          configFilePath: GitVersion.yml
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          registry-url: https://npm.pkg.github.com/
          scope: '@remla23-team08'
      
      - name: Configure Git Credentials
        run: |
          git config user.name "GitHub Actions [bot]"
          git config user.email "actions@github.com"

      - name: Bump package version
        run: |
          npm version ${{ steps.get_gitversion.outputs.majorMinorPatch }} --no-git-tag-version
          git add --all
          git commit -m "Update to version ${{ steps.get_gitversion.outputs.majorMinorPatch }} in package.json [skip ci]"
          git push --set-upstream origin $(git branch --show-current)

      - name: Tag and Release
        env: 
          GITHUB_TOKEN: ${{ steps.generate_github_app_token.outputs.token }}
        run: |
          git status # This is just to check if the git config worked
          git pull origin main # In case any changes were made since checkout
          git tag ${{ steps.get_gitversion.outputs.majorMinorPatch }} -m "Release ${{ steps.get_gitversion.outputs.majorMinorPatch }}"
          git push --tags

          # Create a GitHub release from latest tag
          gh release create ${{ steps.get_gitversion.outputs.majorMinorPatch }} \
            --title "${{ steps.get_gitversion.outputs.majorMinorPatch }}" \
            --generate-notes
  